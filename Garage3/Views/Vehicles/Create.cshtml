@model Garage3.Models.ViewModels.CreateVehicleViewModel

@{
    ViewData["Title"] = "Create";

}


<h1>Create</h1>

<h4>Vehicle</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="RegistrationNumber" class="control-label"></label>
                <input asp-for="RegistrationNumber" class="form-control" />
                <span asp-validation-for="RegistrationNumber" class="text-danger"></span>
            </div>   
            <div class="form-group">
                <label asp-for="PersonalNumber" class="control-label"></label>
                <input asp-for="PersonalNumber" class="form-control" />
                <span asp-validation-for="PersonalNumber" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="VType" class="control-label"></label>
                <select asp-for="VType" class="form-control" id="VTypeInput" onchange="vtypeChanged()">
                    @{

                    var options = (IEnumerable<String>)ViewData["VTypeOptions"];
                    foreach (string option in options)
                    {
                        <option value=@option>@option</option>
                    }
                    }
                </select>
                <span asp-validation-for="VType" class="text-danger"></span>
            </div>
            <div class="form-group" id="CustomVTypeDiv">  
            </div>
            <div class="form-group">
                <label asp-for="Color" class="control-label"></label>
                <input asp-for="Color" class="form-control" />
                <span asp-validation-for="Color" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Make" class="control-label"></label>
                <input asp-for="Make" class="form-control" />
                <span asp-validation-for="Make" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="NumberOfWheels" class="control-label"></label>
                <input asp-for="NumberOfWheels" class="form-control" />
                <span asp-validation-for="NumberOfWheels" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ArrivalTime" class="control-label"></label>
                <input asp-for="ArrivalTime" class="form-control" />
                <span asp-validation-for="ArrivalTime" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<script type="text/javascript">

    function vtypeChanged() {
        var value = document.getElementById("VTypeInput").value;

        if (value == "Other") {

            let html =
                '<label class="control-label" for= "VTypeCustom" > VTypeCustom </label>\
             <input class= "form-control" type = "text" data - val="true" data - val - required="The field is required." id = "VTypeCustom" name = "VTypeCustom" value = "" >\
             <span class= "text-danger field-validation-valid" data - valmsg -for= "VTypeCustom" data - valmsg - replace= "true" > </span>'

            document.getElementById("CustomVTypeDiv").innerHTML = html
        }
        else {
            document.getElementById("CustomVTypeDiv").innerHTML = "";
        }
    }

</script>
<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
